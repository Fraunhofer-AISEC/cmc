// Copyright (c) 2021 Fraunhofer AISEC
// Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: grpcapi.proto

package grpcapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HashFunction int32

const (
	HashFunction_SHA1        HashFunction = 0
	HashFunction_SHA224      HashFunction = 1
	HashFunction_SHA256      HashFunction = 2
	HashFunction_SHA384      HashFunction = 3
	HashFunction_SHA512      HashFunction = 4
	HashFunction_MD4         HashFunction = 5
	HashFunction_MD5         HashFunction = 6
	HashFunction_MD5SHA1     HashFunction = 7
	HashFunction_RIPEMD160   HashFunction = 8
	HashFunction_SHA3_224    HashFunction = 9
	HashFunction_SHA3_256    HashFunction = 10
	HashFunction_SHA3_384    HashFunction = 11
	HashFunction_SHA3_512    HashFunction = 12
	HashFunction_SHA512_224  HashFunction = 13
	HashFunction_SHA512_256  HashFunction = 14
	HashFunction_BLAKE2s_256 HashFunction = 15
	HashFunction_BLAKE2b_256 HashFunction = 16
	HashFunction_BLAKE2b_384 HashFunction = 17
	HashFunction_BLAKE2b_512 HashFunction = 18
)

// Enum value maps for HashFunction.
var (
	HashFunction_name = map[int32]string{
		0:  "SHA1",
		1:  "SHA224",
		2:  "SHA256",
		3:  "SHA384",
		4:  "SHA512",
		5:  "MD4",
		6:  "MD5",
		7:  "MD5SHA1",
		8:  "RIPEMD160",
		9:  "SHA3_224",
		10: "SHA3_256",
		11: "SHA3_384",
		12: "SHA3_512",
		13: "SHA512_224",
		14: "SHA512_256",
		15: "BLAKE2s_256",
		16: "BLAKE2b_256",
		17: "BLAKE2b_384",
		18: "BLAKE2b_512",
	}
	HashFunction_value = map[string]int32{
		"SHA1":        0,
		"SHA224":      1,
		"SHA256":      2,
		"SHA384":      3,
		"SHA512":      4,
		"MD4":         5,
		"MD5":         6,
		"MD5SHA1":     7,
		"RIPEMD160":   8,
		"SHA3_224":    9,
		"SHA3_256":    10,
		"SHA3_384":    11,
		"SHA3_512":    12,
		"SHA512_224":  13,
		"SHA512_256":  14,
		"BLAKE2s_256": 15,
		"BLAKE2b_256": 16,
		"BLAKE2b_384": 17,
		"BLAKE2b_512": 18,
	}
)

func (x HashFunction) Enum() *HashFunction {
	p := new(HashFunction)
	*p = x
	return p
}

func (x HashFunction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HashFunction) Descriptor() protoreflect.EnumDescriptor {
	return file_grpcapi_proto_enumTypes[0].Descriptor()
}

func (HashFunction) Type() protoreflect.EnumType {
	return &file_grpcapi_proto_enumTypes[0]
}

func (x HashFunction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HashFunction.Descriptor instead.
func (HashFunction) EnumDescriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{0}
}

type AttestationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Nonce  []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Cached []string `protobuf:"bytes,3,rep,name=cached,proto3" json:"cached,omitempty"`
}

func (x *AttestationRequest) Reset() {
	*x = AttestationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationRequest) ProtoMessage() {}

func (x *AttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationRequest.ProtoReflect.Descriptor instead.
func (*AttestationRequest) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{0}
}

func (x *AttestationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttestationRequest) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *AttestationRequest) GetCached() []string {
	if x != nil {
		return x.Cached
	}
	return nil
}

type AttestationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestationReport []byte   `protobuf:"bytes,2,opt,name=attestation_report,json=attestationReport,proto3" json:"attestation_report,omitempty"`
	CacheMisses       []string `protobuf:"bytes,3,rep,name=cache_misses,json=cacheMisses,proto3" json:"cache_misses,omitempty"`
}

func (x *AttestationResponse) Reset() {
	*x = AttestationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationResponse) ProtoMessage() {}

func (x *AttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationResponse.ProtoReflect.Descriptor instead.
func (*AttestationResponse) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{1}
}

func (x *AttestationResponse) GetAttestationReport() []byte {
	if x != nil {
		return x.AttestationReport
	}
	return nil
}

func (x *AttestationResponse) GetCacheMisses() []string {
	if x != nil {
		return x.CacheMisses
	}
	return nil
}

type VerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce             []byte   `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	AttestationReport []byte   `protobuf:"bytes,2,opt,name=attestation_report,json=attestationReport,proto3" json:"attestation_report,omitempty"`
	Ca                []byte   `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`
	Peer              string   `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	CacheMisses       []string `protobuf:"bytes,5,rep,name=cache_misses,json=cacheMisses,proto3" json:"cache_misses,omitempty"`
	Policies          []byte   `protobuf:"bytes,6,opt,name=policies,proto3" json:"policies,omitempty"`
}

func (x *VerificationRequest) Reset() {
	*x = VerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationRequest) ProtoMessage() {}

func (x *VerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationRequest.ProtoReflect.Descriptor instead.
func (*VerificationRequest) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{2}
}

func (x *VerificationRequest) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *VerificationRequest) GetAttestationReport() []byte {
	if x != nil {
		return x.AttestationReport
	}
	return nil
}

func (x *VerificationRequest) GetCa() []byte {
	if x != nil {
		return x.Ca
	}
	return nil
}

func (x *VerificationRequest) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

func (x *VerificationRequest) GetCacheMisses() []string {
	if x != nil {
		return x.CacheMisses
	}
	return nil
}

func (x *VerificationRequest) GetPolicies() []byte {
	if x != nil {
		return x.Policies
	}
	return nil
}

type VerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationResult []byte   `protobuf:"bytes,2,opt,name=verification_result,json=verificationResult,proto3" json:"verification_result,omitempty"`
	UpdatedCache       [][]byte `protobuf:"bytes,3,rep,name=updated_cache,json=updatedCache,proto3" json:"updated_cache,omitempty"`
}

func (x *VerificationResponse) Reset() {
	*x = VerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationResponse) ProtoMessage() {}

func (x *VerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationResponse.ProtoReflect.Descriptor instead.
func (*VerificationResponse) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{3}
}

func (x *VerificationResponse) GetVerificationResult() []byte {
	if x != nil {
		return x.VerificationResult
	}
	return nil
}

func (x *VerificationResponse) GetUpdatedCache() [][]byte {
	if x != nil {
		return x.UpdatedCache
	}
	return nil
}

type MeasureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ConfigSha256 []byte `protobuf:"bytes,2,opt,name=config_sha256,json=configSha256,proto3" json:"config_sha256,omitempty"`
	RootfsSha256 []byte `protobuf:"bytes,3,opt,name=rootfs_sha256,json=rootfsSha256,proto3" json:"rootfs_sha256,omitempty"`
	OciSpec      []byte `protobuf:"bytes,4,opt,name=oci_spec,json=ociSpec,proto3" json:"oci_spec,omitempty"`
}

func (x *MeasureRequest) Reset() {
	*x = MeasureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureRequest) ProtoMessage() {}

func (x *MeasureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureRequest.ProtoReflect.Descriptor instead.
func (*MeasureRequest) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{4}
}

func (x *MeasureRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MeasureRequest) GetConfigSha256() []byte {
	if x != nil {
		return x.ConfigSha256
	}
	return nil
}

func (x *MeasureRequest) GetRootfsSha256() []byte {
	if x != nil {
		return x.RootfsSha256
	}
	return nil
}

func (x *MeasureRequest) GetOciSpec() []byte {
	if x != nil {
		return x.OciSpec
	}
	return nil
}

type MeasureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *MeasureResponse) Reset() {
	*x = MeasureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureResponse) ProtoMessage() {}

func (x *MeasureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureResponse.ProtoReflect.Descriptor instead.
func (*MeasureResponse) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{5}
}

func (x *MeasureResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TLSSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content  []byte       `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Hashtype HashFunction `protobuf:"varint,3,opt,name=hashtype,proto3,enum=grpcapi.HashFunction" json:"hashtype,omitempty"`
	PssOpts  *PSSOptions  `protobuf:"bytes,4,opt,name=pssOpts,proto3" json:"pssOpts,omitempty"`
}

func (x *TLSSignRequest) Reset() {
	*x = TLSSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSSignRequest) ProtoMessage() {}

func (x *TLSSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSSignRequest.ProtoReflect.Descriptor instead.
func (*TLSSignRequest) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{6}
}

func (x *TLSSignRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TLSSignRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *TLSSignRequest) GetHashtype() HashFunction {
	if x != nil {
		return x.Hashtype
	}
	return HashFunction_SHA1
}

func (x *TLSSignRequest) GetPssOpts() *PSSOptions {
	if x != nil {
		return x.PssOpts
	}
	return nil
}

type TLSSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedContent []byte `protobuf:"bytes,2,opt,name=signed_content,json=signedContent,proto3" json:"signed_content,omitempty"`
}

func (x *TLSSignResponse) Reset() {
	*x = TLSSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSSignResponse) ProtoMessage() {}

func (x *TLSSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSSignResponse.ProtoReflect.Descriptor instead.
func (*TLSSignResponse) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{7}
}

func (x *TLSSignResponse) GetSignedContent() []byte {
	if x != nil {
		return x.SignedContent
	}
	return nil
}

type TLSCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TLSCertRequest) Reset() {
	*x = TLSCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSCertRequest) ProtoMessage() {}

func (x *TLSCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSCertRequest.ProtoReflect.Descriptor instead.
func (*TLSCertRequest) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{8}
}

func (x *TLSCertRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TLSCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate [][]byte `protobuf:"bytes,2,rep,name=certificate,proto3" json:"certificate,omitempty"` // PEM encoded, separated by line
}

func (x *TLSCertResponse) Reset() {
	*x = TLSCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSCertResponse) ProtoMessage() {}

func (x *TLSCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSCertResponse.ProtoReflect.Descriptor instead.
func (*TLSCertResponse) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{9}
}

func (x *TLSCertResponse) GetCertificate() [][]byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type PeerCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer string `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *PeerCacheRequest) Reset() {
	*x = PeerCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerCacheRequest) ProtoMessage() {}

func (x *PeerCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerCacheRequest.ProtoReflect.Descriptor instead.
func (*PeerCacheRequest) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{10}
}

func (x *PeerCacheRequest) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

type PeerCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cache []string `protobuf:"bytes,1,rep,name=cache,proto3" json:"cache,omitempty"`
}

func (x *PeerCacheResponse) Reset() {
	*x = PeerCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerCacheResponse) ProtoMessage() {}

func (x *PeerCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerCacheResponse.ProtoReflect.Descriptor instead.
func (*PeerCacheResponse) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{11}
}

func (x *PeerCacheResponse) GetCache() []string {
	if x != nil {
		return x.Cache
	}
	return nil
}

type PSSOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SaltLength int32 `protobuf:"varint,1,opt,name=salt_length,json=saltLength,proto3" json:"salt_length,omitempty"`
}

func (x *PSSOptions) Reset() {
	*x = PSSOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PSSOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSSOptions) ProtoMessage() {}

func (x *PSSOptions) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSSOptions.ProtoReflect.Descriptor instead.
func (*PSSOptions) Descriptor() ([]byte, []int) {
	return file_grpcapi_proto_rawDescGZIP(), []int{12}
}

func (x *PSSOptions) GetSaltLength() int32 {
	if x != nil {
		return x.SaltLength
	}
	return 0
}

var File_grpcapi_proto protoreflect.FileDescriptor

var file_grpcapi_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x22, 0x52, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x67, 0x0a, 0x13,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6d, 0x69, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4d,
	0x69, 0x73, 0x73, 0x65, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x63, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x6d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x53, 0x68,
	0x61, 0x32, 0x35, 0x36, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x63, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x63, 0x69, 0x53, 0x70, 0x65, 0x63, 0x22,
	0x2b, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x9c, 0x01, 0x0a,
	0x0e, 0x54, 0x4c, 0x53, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x68, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x07,
	0x70, 0x73, 0x73, 0x4f, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x53, 0x53, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x70, 0x73, 0x73, 0x4f, 0x70, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x0f, 0x54,
	0x4c, 0x53, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x43, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x26, 0x0a, 0x10,
	0x50, 0x65, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x11, 0x50, 0x65, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x22,
	0x2d, 0x0a, 0x0a, 0x50, 0x53, 0x53, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x61, 0x6c, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2a, 0x92,
	0x02, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x48, 0x41, 0x31, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41,
	0x32, 0x32, 0x34, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x33, 0x38, 0x34, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x44, 0x34,
	0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x44, 0x35, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x4d,
	0x44, 0x35, 0x53, 0x48, 0x41, 0x31, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x49, 0x50, 0x45,
	0x4d, 0x44, 0x31, 0x36, 0x30, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f,
	0x32, 0x32, 0x34, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x35,
	0x36, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33, 0x38, 0x34, 0x10,
	0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31, 0x32, 0x10, 0x0c, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x32, 0x34, 0x10, 0x0d, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x0e, 0x12,
	0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x73, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x0f,
	0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x62, 0x5f, 0x32, 0x35, 0x36, 0x10,
	0x10, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x62, 0x5f, 0x33, 0x38, 0x34,
	0x10, 0x11, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x41, 0x4b, 0x45, 0x32, 0x62, 0x5f, 0x35, 0x31,
	0x32, 0x10, 0x12, 0x32, 0xa2, 0x03, 0x0a, 0x0a, 0x43, 0x4d, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x54, 0x4c, 0x53, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x17, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x4c, 0x53, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x4c, 0x53, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x12, 0x17, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x67,
	0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpcapi_proto_rawDescOnce sync.Once
	file_grpcapi_proto_rawDescData = file_grpcapi_proto_rawDesc
)

func file_grpcapi_proto_rawDescGZIP() []byte {
	file_grpcapi_proto_rawDescOnce.Do(func() {
		file_grpcapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpcapi_proto_rawDescData)
	})
	return file_grpcapi_proto_rawDescData
}

var file_grpcapi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpcapi_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_grpcapi_proto_goTypes = []interface{}{
	(HashFunction)(0),            // 0: grpcapi.HashFunction
	(*AttestationRequest)(nil),   // 1: grpcapi.AttestationRequest
	(*AttestationResponse)(nil),  // 2: grpcapi.AttestationResponse
	(*VerificationRequest)(nil),  // 3: grpcapi.VerificationRequest
	(*VerificationResponse)(nil), // 4: grpcapi.VerificationResponse
	(*MeasureRequest)(nil),       // 5: grpcapi.MeasureRequest
	(*MeasureResponse)(nil),      // 6: grpcapi.MeasureResponse
	(*TLSSignRequest)(nil),       // 7: grpcapi.TLSSignRequest
	(*TLSSignResponse)(nil),      // 8: grpcapi.TLSSignResponse
	(*TLSCertRequest)(nil),       // 9: grpcapi.TLSCertRequest
	(*TLSCertResponse)(nil),      // 10: grpcapi.TLSCertResponse
	(*PeerCacheRequest)(nil),     // 11: grpcapi.PeerCacheRequest
	(*PeerCacheResponse)(nil),    // 12: grpcapi.PeerCacheResponse
	(*PSSOptions)(nil),           // 13: grpcapi.PSSOptions
}
var file_grpcapi_proto_depIdxs = []int32{
	0,  // 0: grpcapi.TLSSignRequest.hashtype:type_name -> grpcapi.HashFunction
	13, // 1: grpcapi.TLSSignRequest.pssOpts:type_name -> grpcapi.PSSOptions
	7,  // 2: grpcapi.CMCService.TLSSign:input_type -> grpcapi.TLSSignRequest
	9,  // 3: grpcapi.CMCService.TLSCert:input_type -> grpcapi.TLSCertRequest
	1,  // 4: grpcapi.CMCService.Attest:input_type -> grpcapi.AttestationRequest
	3,  // 5: grpcapi.CMCService.Verify:input_type -> grpcapi.VerificationRequest
	11, // 6: grpcapi.CMCService.PeerCache:input_type -> grpcapi.PeerCacheRequest
	5,  // 7: grpcapi.CMCService.Measure:input_type -> grpcapi.MeasureRequest
	8,  // 8: grpcapi.CMCService.TLSSign:output_type -> grpcapi.TLSSignResponse
	10, // 9: grpcapi.CMCService.TLSCert:output_type -> grpcapi.TLSCertResponse
	2,  // 10: grpcapi.CMCService.Attest:output_type -> grpcapi.AttestationResponse
	4,  // 11: grpcapi.CMCService.Verify:output_type -> grpcapi.VerificationResponse
	12, // 12: grpcapi.CMCService.PeerCache:output_type -> grpcapi.PeerCacheResponse
	6,  // 13: grpcapi.CMCService.Measure:output_type -> grpcapi.MeasureResponse
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_grpcapi_proto_init() }
func file_grpcapi_proto_init() {
	if File_grpcapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpcapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PSSOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpcapi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpcapi_proto_goTypes,
		DependencyIndexes: file_grpcapi_proto_depIdxs,
		EnumInfos:         file_grpcapi_proto_enumTypes,
		MessageInfos:      file_grpcapi_proto_msgTypes,
	}.Build()
	File_grpcapi_proto = out.File
	file_grpcapi_proto_rawDesc = nil
	file_grpcapi_proto_goTypes = nil
	file_grpcapi_proto_depIdxs = nil
}
