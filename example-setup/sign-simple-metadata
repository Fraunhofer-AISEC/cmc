#!/bin/bash

set -e

DIR="$(CDPATH= cd -- "$(dirname -- "$0")/.." && pwd -P)"

if [ "$#" -ne 1 ]; then
    echo "Error: script requires exactly one argument 'json' or 'cbor'"
    exit
fi

if [ "$1" != "cbor" ] && [ "$1" != "json" ]; then
  echo "Error: Only 'json' or 'cbor' supported, not $1"
  exit
fi

PKI="$DIR/example-setup/pki"
INPUT="$DIR/example-setup/metadata-raw"
OUTPUT="$DIR/example-setup/metadata-signed"

if [ ! -d "$PKI" ]; then
  echo "PKI Directory does not exist. Did you run 'generate-pki'? Abort.."
  exit
fi

if [ ! -d "$INPUT" ]; then
  echo "Input Directory does not exist. Abort.."
  exit
fi

SIG="$DIR/tools/signing-tool/signing-tool"
CONV="$DIR/tools/converter/converter"

KEY=$PKI/developer_A/developer_A-key.pem
CHAIN=$PKI/users/developer_A.pem,$PKI/ca/user_sub_ca.pem,$PKI/ca/ca.pem

# Clean start
rm -rf $OUTPUT
mkdir -p $OUTPUT

# If CBOR format is specified, the json manifests must be converted first
if [ "$1" == "cbor" ]; then
  echo "Converting raw json metadata to cbor metadata"
  for path in $INPUT/*; do
    # Extract filename and extension
    IN=$(basename ${path})
    EXT=${IN##*.}
    # Only convert JSON files
    [ $EXT == "json" ] || continue
    # Write them to the same folder as the input files
    OUT=${IN%.*}.$1
    # Convert JSON to CBOR using the converter-tool
    $CONV -in $INPUT/$IN -out $INPUT/$OUT -format json
  done
fi

echo "Signing $1 metadata"

$SIG -in $INPUT/rtm.manifest.$1         -out $OUTPUT/rtm.manifest.$1         -keys $KEY -x5cs $CHAIN -format $1
$SIG -in $INPUT/os.manifest.$1          -out $OUTPUT/os.manifest.$1          -keys $KEY -x5cs $CHAIN -format $1
$SIG -in $INPUT/company.description.$1  -out $OUTPUT/company.description.$1  -keys $KEY -x5cs $CHAIN -format $1

$SIG -in $INPUT/device.description.$1   -out $OUTPUT/device.description.$1   -keys $KEY4 -x5cs $CHAIN --format $1
$SIG -in $INPUT/device.config.$1        -out $OUTPUT/device.config.$1        -keys $KEY4 -x5cs $CHAIN --format $1