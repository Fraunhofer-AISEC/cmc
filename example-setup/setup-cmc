#!/bin/bash

set -euo pipefail

trap '[ $? -eq 0 ] && exit 0; printf "%s failed\n" "$0"' EXIT
dir="$(CDPATH='' cd -- "$(dirname -- "$0")" && pwd -P)"
source "${dir}/utils.sh"
export PATH=${PATH}:${HOME}/go/bin

if [[ "$#" -ne 3 ]]; then
   echo "Usage: ./setup-cmc <cmc-folder> <data-folder> <cbor|json>"
   exit
fi

cmc=$(set -e; abs_path "$1")
data=$(set -e; abs_path "$2")
ser="${3}"
client="docker"

if [[ ! -d "${cmc}" ]]; then
  echo "CMC directory does not exist. Did you clone the repository? Abort.."
  exit 1
fi

if [[ -d "${data}" ]]; then
  echo "Data directory does already exist. Please choose a new directory. Abort.."
  exit 1
fi

echo "Using CMC: ${cmc}"
echo "Using ${data} as directory for local data"

# Create a folder for the cmc configuration and metadata
mkdir -p "${data}"

# Install dependencies
sudo apt install -y moreutils golang-cfssl build-essential zlib1g-dev libssl-dev jq
sudo snap install yq

# Install tpm-pcr-tools
git clone https://github.com/Fraunhofer-AISEC/tpm-pcr-tools.git "${data}/tpm-pcr-tools"
cd "${data}/tpm-pcr-tools"
make
sudo make install

# Build CMC
cd "${cmc}"
echo "Building CMC.."
go build ./...

# Install CMC to $GOPATH/bin
echo "Installing CMC"
go install ./...

# Copy metadata templates
cp -r "${cmc}/example-setup/"* "${data}"

# Generate a PKI
"${data}/setup-pki" -i "${data}" -o "${data}/pki"

# Generate and sign platform (RTM and OS) metadata
"${data}/update-platform" "${data}" "${ser}"

# Generate example manifest for host apps
"${data}/update-app-manifest-live" "${data}" "${ser}"

# Generate container example manifest
"${data}/update-container-manifest-live" docker.io/library/ubuntu:22.04 "${data}" "${cmc}" "${ser}" "${client}"