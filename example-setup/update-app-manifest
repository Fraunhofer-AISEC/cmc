#!/bin/bash

set -euo pipefail

trap '[ $? -eq 0 ] && exit 0; printf "%s failed\n" "$0"' EXIT
dir="$(CDPATH='' cd -- "$(dirname -- "$0")" && pwd -P)"
source "${dir}/utils.sh"
export PATH=${PATH}:${HOME}/go/bin

if [[ "$#" -ne 2 ]]; then
   echo "Usage: ./update-app-manifest <data-folder> <cbor|json>"
   exit 1
fi

data=$(set -e; abs_path "$1")
input="${data}/metadata-raw"
tmp="${data}/metadata-tmp"
output="${data}/metadata-signed"
ser="${2}"

if [[ ! -d "${data}" ]]; then
  echo "Data directory ${data} does not exist. Did you run the setup-full-simple script? Abort.."
  exit 1
fi

echo "Using ${data} as directory for local data"

# Calculate the IMA app reference values
referenceValues=$(sudo calculate-ima-pcr -t 10 -i ima-ng -p /usr/bin)

# Replace existing reference values with new reference values in the App Manifest
json=$(cat "${input}/app.manifest.json")
json=$(echo "${json}" | jq 'del(.referenceValues[])')
json=$(echo "${json}" | jq --argjson ver "${referenceValues}" '.referenceValues += $ver')
printf "%s\n" "${json}" > "${input}/app.manifest.json"

# Sign the metadata*
key="${data}/pki/signing-cert-key.pem"
chain="${data}/pki/signing-cert.pem,${data}/pki/ca.pem"

rm -rf "${tmp}"/app.manifest.*
rm -rf "${output}"/app.manifest.*

# Convert to CBOR if specified
if [[ "${ser,,}" = "json" ]]; then
  echo "using json serialization"
  cp "${input}/app.manifest.json" "${tmp}/app.manifest.json"
elif [[ "${ser,,}" = "cbor" ]]; then
  echo "using cbor serialiation"
  cmc-converter -in "${input}/app.manifest.json" -out "${tmp}/app.manifest.cbor" -outform cbor
else
  echo "serialization format ${ser} is not supported"
  exit 1
fi

cmc-signing-tool -in "${tmp}/app.manifest.${ser}" -out "${output}/app.manifest.${ser}" -keys "${key}" -x5cs "${chain}"