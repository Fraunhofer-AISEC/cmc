#!/bin/bash

set -euo pipefail

trap '[ $? -eq 0 ] && exit 0; printf "%s failed\n" "$0"' EXIT
dir="$(CDPATH='' cd -- "$(dirname -- "$0")" && pwd -P)"
source "${dir}/utils.sh"
export PATH=${PATH}:${HOME}/go/bin

print_usage() {
  echo "Usage: $(basename "$0") [-i] [-h] <data-folder> <cmc-folder> <cbor|json>"
  echo "       -h: print help"
  echo "       -i: use ids pki instead of simple pki"
  echo "       data-folder: a non-existing folder to store cmc data in"
  echo "       cmc-folder: path where the cmc repository resides"
  echo "       cbor | json: serialization to use for metadata"
}

script_suffix=""
while getopts 'i:h' flag; do
  case "${flag}" in
    i)
        script_suffix="-ids"
        shift
        ;;
    h)
        print_usage
        exit 0 ;;
    *) print_usage
       exit 1 ;;
  esac
done

if [[ "$#" -lt 3 ]]; then
   print_usage
   exit 1
fi

cmc=$(set -e; abs_path "$2")
data=$(set -e; abs_path "$1")
ser="${3}"


if [[ ! -d "${cmc}" ]]; then
  echo "CMC directory ${cmc} does not exist. Did you clone the repository? Abort.."
  exit 1
fi

if [[ -d "${data}" ]]; then
  echo "Data directory ${data} does already exist. Please choose a new directory. Abort.."
  exit 1
fi

echo "Using CMC: ${cmc}"
echo "Using ${data} as directory for local data"

# Create a folder for the cmc configuration and metadata
mkdir -p "${data}"

# Copy metadata templates
cp -r "${cmc}/example-setup/"* "${data}"

# Generate a PKI
"${data}/setup-pki" "${data}/pki-input" "${data}/pki"

# Generate example SGX metadata for the current machine
"${data}/generate-metadata-sgx" "${data}" "${cmc}"

# Sign the metadata
"${data}/sign-metadata${script_suffix}" "${data}" "json"
